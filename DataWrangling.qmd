---
title: "Data Wrangling Lesson"
author: "Jacob Cram"
format: html
editor: visual
---

**Please type the names of all members of your team here:**

## Welcome

Welcome to the first lesson of the multivariate analysis in environmental science course. This lesson leverages a quarto workbook. You need the following things working on your computer (or some other computer) to use this workbook.

1\) R. I'm using version 4.1.3.

2\) Rstudio RStudio I'm using version 2022.07.2+576

3\) All of the required dependences to run a quarto notebook. RStudio will probably tell you which these are when you first try to use this notebook.

4\) The following R packages: `tidyverse`, `here`

You can install them, if you haven't already by running `install.packages(tidyverse)` and the same for here in the console.

5\) If you are doing things right, this folder should be in an rstudio project called `DataWrangling`. We can talk about what projects are, but in brief, you should be ina folder called `DataWrangling` that has a file in it called `DataWrangling.Rproj`

One can make a code chunk in quarto, and you can run it by typing ctrl + shift + enter, or hitting the little triangle button. Then it runs your code and stuff happens.

```{r}
1 + 2
```

For this project, please work in groups of two or maybe three.

Try to run all of the code and answer all of the questions. Cram will provide hints on request. Be careful or he will start to monologue and then class just becomes a lecture.

Lets get down to business:

# Loading in Data

I've already imported the data for today's lesson to the `Data` subdirectory folder of the DataWrangling project. Take a look at the files inside of it. You can probably open them directly in rstudio, or your favorite notepad program.

They can also be downloaded from the internet directly. They are on BCO-DMO. They are also from my dissertation, btw. I am the wor

Data citaton:

Fuhrman, J. A. (2014) ARISA relative abundances (bacterial community structure), San Pedro Channel, 5 depths, 2014 (Bacterial, Archaeal, and Protistan Biodiversity project, Marine Viral Dynamics project). Biological and Chemical Oceanography Data Management Office (BCO-DMO). (Version 2014-11-05) Version Date 2014-11-03 \[if applicable, indicate subset used\]. http://lod.bco-dmo.org/id/dataset/535915 \[2023 Jan 08\]

First lets load in the packages we will need

```{r}
library(tidyverse)
library(here)
```

```{r}
env00 <- read_csv(here("Data", "arisa_latlon_sort_vess_phys.csv"), na = c("nd"))
```

Take a look at env00 (`View(env00)` or click on it in the environment panel). Also run `glimpse(env00)`. Its kind of a mess. This is 100% the fault of graduate student Jacob Cram (back in 2014).

**Question -1:** What does the column SSHD_Sat indicate? What are its units. Why do adjacent rows often have the same value for SSHD_Sat?

**Question 0:** What is the purpose of the depth_n column. How is it different from the Depth column.

Question 0.5: How are the columns to the right of depth_n different to the ones to the left of depth_n:

Question: Why did I have to specify the arguement `na = c("nd")`. What happens if you run a similar function without that argument. How does the resulting data frame look different?

\###

In this class we will look a lot at "long" and "wide" format data. Learn more about them here.

https://www.statology.org/long-vs-wide-data/

**Question 1:** Is this data long? Wide? Or sort of a combination of both?

**Question 2:** What other things annoy you about this data table?

**Fun fact** this is about the best case scenario for how data looks. Most data people send you will be more confusing and more poorly curated than this, at lest in academia.

## dplyr

I use the dplyr library , which is part of tidyverse to make my data less awful.

I often use the following commands

### filter

`filter` is useful for just taking some rows

here I am keeping just the samples from the 5 meter surface mixed layer depth.

```{r}
env_5m <- env00 %>%
  filter(depth_n == 5)
```

```{r}
env_5m_finiteNO2 <- env_5m %>% 
  filter(!is.na(NO2))
```

**Question:** Please filter just the samples from 150m that were collected in the year 2000.

**Question:** Now just the samples from 150m that were collected in June, July or August, that

### select

`select` lets me keep just some columns

here, I'm only keeping the phosphate data. I also keep the year, month, day and depth columns because I want to know which phosphate come from where. Without those I'm out of luck.

```{r}
env_phosphate <- env00 %>%
  select(date_local, depth_n, PO4)
```

**Task:** Please make a data frame which contains both Nitrate + Nitrite, Nitrite and Phosphorous concentrations as measured before the year 2005.

### mutate

Mutate is useful for changing columns

```{r}
env_phosphate_wlog <- env_phosphate %>%
  mutate(PO4_log = log10(PO4))
```

### summarise

Summarize is useful in combination with group_by to get summary statistics about things.

```{r}
phosphate_summary <- env_phosphate %>% 
  filter(!is.na(PO4)) %>%
  group_by(depth_n) %>%
  summarise(median = median(PO4), min = min(PO4), max = max(PO4))
phosphate_summary
```

**Question:** What happens if you comment out the line beginning `filter`. What about the line beginning with group_by. What does each line do?

# Pivoting

You read a little about long and wide format data. Often we need to go from one to another.

Pivoting wider

```{r}
phosphate_wide <- env_phosphate %>%
  pivot_wider(names_from = depth_n, values_from = PO4, values_fn = mean)

phosphate_wide
```

**Question**: What does `values_fn = mean` do?

Pivoting longer

```{r}
env_5m_long <- env_5m %>%
  select(date_local, temp, sal, NO2:SiO3) %>%
  pivot_longer(cols = -date_local, names_to = "measurement", values_to = "value") %>%
  filter(!is.na(value))
```

Questions: Why the select line? What does `cols = -date_local` mean?

### Excercise:

```{r}
bio00 <- read_csv(here("Data", "arisa_latlon_sort_vess_bio.csv"))
arisa_fragments <- bio00 %>%
  select(date_local, depth_n, arisa_frag, rel_abund)
```

I pulled some data called arisa_framents out of another file. Each arisa fragment represents a distinct species level group. **Please make a table where each row is a sample and each column is a species level group.**

# Joining

Sometimes you want to combine data from two data frames. I often do this with "join" operators.

For instance, at one point, I had a bunch of satellite data, and I wanted to combine it with nutrient data. I've already done that in these tables but lets simulate

```{r}
# Satellite data are just at the surface
satellite_data <- env_5m %>% 
  select(date_local, Chl_A_Sat:POC) %>%
  # and lets pretend we only have satellite data through 2009
  filter(date_local < as.Date("2008-01-01"))

chemistry_data <- env00 %>%
  select(date_local, depth_n, temp, sal, NO2:SiO3) %>%
  # only when we at least have temperature measurments
  filter(!is.na(temp))
```

So when I made these, I stuck them together so that I used the same satellite measurments for each depth (eg the surface productivity at 890 meters is the same as at 5m, since its only measured at the surface.

I can stick things together like this

```{r}
sat_chem <- full_join(satellite_data, chemistry_data, by = "date_local")
```

Check out sat_chem. What happens to the satellite measurments after 2008.

What about the chemistry measurments in late 2006 and 2007.

`full_join` takes the records that are present in either data set.

There are three other join operations and you can look them up by accessing the help file

`?full_join`

Excercise: join the satellite and chemistry data using one of the other operators and describe how the output is different than mine.

# Plotting

```{r}
env_phosphate %>%
  ggplot(aes(x = date_local, y = PO4, color = depth_n)) + 
  geom_point()
```

If you want to plot a bunch of variables, its amost always smart to pivot longer first Plotting almost always happens with long format data, especially when you want to plot a bunch of variables at once.

```{r}
chemistry_data_long <- chemistry_data %>%
  pivot_longer(cols = -c(date_local, depth_n), names_to = "measurement", values_to = "value") %>%
  filter(!is.na(value))
```

```{r}
chemistry_data_long %>%
  ggplot(aes(x = date_local, y = value)) +
  geom_point() +
  facet_grid(depth_n ~ measurement)
```

Things I hate about this figure:

-   The depths are in out of order order.

-   The scales should be really different for the different variables.

-   The numbers on the x axis bleed into eachother

-   The points are too big and you can't tell them apart.

-   The gray background is ugly

I'm going to fix all of those things.

```{r}
# put the depths in order
depths_in_order <- c("5", "CMAX", "150", "500", "890")
chemistry_data_long_better <- chemistry_data_long %>%
  mutate(depth_n = factor(depth_n, levels = depths_in_order))

# redo the plot
chemistry_data_long_better %>%
  ggplot(aes(x = date_local, y = value)) +
  geom_point(size = 0.5) +
  facet_grid(measurement ~ depth_n, scales = "free_y") + # but this time with different y axes
  theme_bw() +
  theme(axis.text.x = element_text(angle = -90), strip.text.y = element_text(angle = 0)) # rotate the x axis adn panel labels so they looks better
```

# Big exercise

You saw that the ARISA data had not particularly informative names. eg ARISA_643.4 What species even is that?

Check out the bins_taxonomy.csv table.

Please do the following and put your code below.

1.  Load that data in

<!-- -->

2)  Subset out only the taxonomy data from 5m.

3)  Make a new column called `arisa_frag` which has complementary data to the `arisa_frag` column in the `arisa_fragments` data table we created earlier.

4)  Subset out only the `arisa_frag` column, and the columns Phylum, Class, Order, Family, Genus into a new data frame called `taxonomy_table`

5)  Combine `taxonomy_table` with `arisa_fragments`

6)  Subset out only arisa fragments from the Proteobacteria phylum.

7)  Find the sum of the relative abundances of all of the different classes of proteobacteria at each date and depth.

8)  Plot your results.

9)  If you have time, summarize the abundance of some other groups of bacteria.

I will ask you to share your results with the class. If you don't make it that far, I will ask you to reflect on what you have accomplished.
